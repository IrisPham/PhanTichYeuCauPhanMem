<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAACxFJREFUaEPV
        l3tU1GUax63d2lOW9se22VHLzZVdK4osu6hlriezKMu8Va7SXRG8It5JrFB2CVG6nKi2C2rc73JnZmAY
        EAkCRPDCbWZgZhjujDCK1O+733e8VJ63QLfZs8w5n/P7zfN7n+f9Pu/7PO9vZhiAIY3UOJSQGocSUuNQ
        QmocSkiNQwmp8b8hOjr6d1VVVdfyel1KSsr1F0hLS/uDRqP5/bBhw66S+V0pUuOVIMRlZmYOV6vVz6lV
        qi80KlW1RqPuyc1V96rVqg7a03NyclanpqaOKikpuUYW40qQGi+XwsLC61Qq1ZtMQldWWmo31On721va
        lP6zZ9Hf3w9bVzcsTabvqyqP9mm1ed05OVlvM4nrZbEuF6nxchCrnp2dGVRUVNTb19f3Q1d7Bzrb2mE1
        N6PJ2IhGg5HizWBC6OQzjkFpSak9Kytrj/CVxbwcpMbBImo7MzN997fFxaeFsBaLFQ119SgqPISIb77B
        nj17EBwcjE/DwpCRkY5jVdVoNlvOJ1FyWviKGLLYg0VqHAyi5tmY3vn52t4zZ86gUW9EdeVRREdHYYe/
        P94PCvr+s88/66P4s0zie79t25SQkBAcKiyEoUEP4SN8RQwRSzbHYJAaB0NCQsJNaWmpXRVlZag5fgIn
        jx1HVFQkAgICEBEZYU9MjI9JSkrySUlJ2paQEL8vMTGhRiQU/H4w6mvrHT7CV8TIzs4eKZtjMEiNAyGO
        ysSUxJdVqpwzFWXlOFJegXytFh98EIrYuFhbYmLiG5mZ4cPFyoaFhV1TVRV9rU6nuzEuPi4wfF+4XaNW
        o5zihS+b/0zSwaQFIqZsroGQGgeCk10bFxf3NWu/v6S4GIb6Bhw4sB8xsTG2mISYWeI9IPMLDw8fHhUT
        9clHH33Uf/RIJYQvd64/Pj7+axFT5jMQUuNAiJcUE6g0GgyKqGmj3oB9+/f1RUZG+v6S+PNcHRETMfOr
        r786LRq6sKAA9TV1CnetUsSUjB8QqXEgWBbXc7Xbek71sHTyYDGZERkVaY+IiBjH57/2pr2KQm/bf2C/
        /QR7RpuXi1ZrqxIVHWX5nyfAhhXnPvi2hb23F5GREb2hoaEjZON/CoWOjIg40CveD3xD09cumr9HxJSN
        HwipcSCCgoKGs+YdCfAnguNcF98HI0KMEWPFMfpTXxFTNn4gpMaBCA0NuUk07SUJgOIGFCHGiLGXJAAR
        80p+6EmNv4aYJDDQb1Rg4E7Y7XZ8wzeu3d6DnTsDsGXLlgETEGPEWOFzztcOEUvElI0fCKnxlxDiyU0z
        Zjzi4uXl2W6z2ex8y9ptti67p+fytgkTJtwqnv8aYowYK3zO+drsIpaIyecjyWXtgtQog5+ryWjiTVY5
        CRFbzHG1TIMMqVEGP2J1vPUV22CrXYdT9X7o0e9Er3Ev7E2f47SZdW2Nw5mWVPS1ZuNsu4ZocbaD8L6v
        LQt9LSk4bY3m2C/R2/QhegyBONWwHba69eiu9YK+YouYSCQx6J8WUqMMfsaQVd0n18CsmYLm/CfQUjgX
        bcVL0PGdJ7qO+MJWvR2nju9Cz8nd6K0JRW/tXrKb33fi1LFt6K5cg47y19FWsggtRU+hWfcYLNrJaFLf
        g6acO9F9coWYSOzEGJkGGVKjDH689WVv/9BdswHm3Jmw6p5Da9FitJcsQ2e5D8X5MYGd6Dn+PgXvQa+D
        IJw6EQDbsa3oPrr6nPjShWg9/DSaC6fDTPEmzb1oUt1NXNF9YhX05QGKmEumQYbUKIOfVV3HfWBWz0Cz
        9lmu/ktoO/wWOkrXoqtiK2yV7+FU9b/QcyyYSQRzJ/7JVd+B7qrN3J2VFP8axS9Ai0M8Vz7/QZhy3ZiA
        q2MHTKr7mcQj3IXtjl2QaZAhNcoQQbuPb4ZF4w5r/otoPfQG2r9djc7vNqO7YgcT2AVbFVe8OsixE7Yq
        f+7KBnRWeKG9zINlM5/iZ8Na+KhDvDlPiKdwNa/qyVyYqSzNJ2BjuTktga5j/mjOW4gWHVezaCXLZyMT
        8OcOBFBsINlF3kVX5Vba1qGjbDnaS5egtXgua34WmgumUTzFXhCvuY+imYzmUZblk7DkPc8dCHFeAt3H
        Ati8r6C10Ivl44uOEj8m8A66ygMIhVcwmfJNyApfhBefccGIG67BIvexSPtsMiy6Kaz5B1g29/5E/EMU
        Ph2W3NksyxfIEthOfOy8BLpYIi35nmgr9EH74S1MYDt74B2eQv7oLN3Ge1/uihcWz5sqHC7y8txJXPVJ
        DuFNF8U/fE58Hk8j7XwuzFIeDMvZyJ8KHyftQFUIy2ct2g5tYgJ+6Cjezj7wI5t4nK7hrixDy6ElGDli
        xEXxgpEjbmSdi2YVMBmH+BkU707hC9hTr1D8CrQUrOOJ9YXwcdIOVIaiVefLHdjCHtiK9qLNPErXs6FX
        sqxeh7XgJQp6Dh4eHhfFC8T3Rh6VJpVoWIrXzOCOULx2oUN8S8EKtFJ8a8EmdFf/W/g4J4HOI6HcgY2c
        iMILNlD0Gk7uSREeFLOAtexOcY9Dl5uEOXPmOMS7urpCp0nki4q1r2LN87kYd078q/T3Yiyf8zG3oeto
        mBMTKN/LHtiAFq0PrNqV5E2eSospai6PwScpchoas+9HR9V2bPRd7Ujgzjsn8vsOPnuICbBseAyLk0yI
        t+q8mMCP4lt0W/hSDHVeAh2lQUpz7ho053qiWfMqzKoXKWoOmrJmojHzERgz3GBMnwhD+gSMv2OsIwFB
        dhjftDmPM0l3rv5Crv4F8Sw/IV631SHeqt3AQ2CXeBM7J4G2w+8qFvVbMOcshSl7Ppoyn0ZjxnSKngxD
        miv0B13IeKTsGX1RvMB32WNM9Olz4vMoPp/idT5kM6H4fIrP8+WirBK95bwErAUbFVP2YjRlPI/G9Fkw
        pk6F4eAk6FMmoiF5POqTb+d1HLyXPvCzBO6+y4Wrv5AJULyW4vMpPn+TY9XF1Zq7Hhb1Si7M69wdb+cl
        YMlbrjSmPQvjwZkwpDwMffI9aEh0QX3iODLWQUPSHYjaFyL+Xv7IJx+jIWMJS28FE1jHHdjIPhKrvok2
        H4r3gjn7NS7MIt4vdl4CpuxFiiH5cYqcjPqEu1AfPx518WNRFzea1zG0cQeS/srf9l+ix5SJXpMKdnMe
        7JZC1jxLJI/i8zY4hItrs3otLKoVMGW9iqb0RVwYdybxjPMSMKY9qTQkTKLYiaiN/TNqY0aTUby/lbbb
        uQPsgWQ3ltU09sVs9sg8loUHV5VNn7uWpULxuRth1TAZNf9X5CyneA+KXwBjylMwJD0mfJ2XgD75QaU2
        1gU1MbehNnoUaqL/5LjWxnIX4iewnO5lP0xhb/BIzZjHRvfgSbWcCfDk0qwnYtVZMqpVLJllMLGsGtPm
        Ufxs6BOnoSHuPjQkuDovgbq4vyk10WNQE3ULaiJvdlxr+b0u9i8sn3ugT5rCFZzFBn8BpsylDpEW1WqK
        pnhiYcmYc7xhznqDCf4DjalzYUyeBX3CFIp3YywX1EWPc14CNTFjFYpWTkbdTG5RamLGKLVxLiwrN6Uh
        eapiODhbMabPV5oyPRRztqdiUa3hsbue+PLeRzHnrFRMmW8qFK8YU+eyn2YpDYlTlfo4N6U2xoWxb1Nq
        Ikf99gnwcwPZSN4m/uQ9EkiCyG6yl3xAPiQfk0/OE3aeC9/FMzFGjBU+wlfEELFETBFbzCHmukGm5VKk
        xksRwcgfifhjfweZSNzIZDKFTCd/J0+Q2cSdPEOePY+4FzbxTIwRY4WP8BUxRCwRU8QWc4i5frsE/p+R
        GocOGPYfVmoYRnhxh6cAAAAASUVORK5CYII=
</value>
  </data>
</root>